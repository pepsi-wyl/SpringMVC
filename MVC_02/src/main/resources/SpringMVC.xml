<?xml version="1.0" encoding="UTF8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">

                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>

                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

    <!-- 自动扫描包 -->
    <context:component-scan base-package="controller pojo mapper interceptors"/>

    <!--
    path：设置处理的请求地址 view-name：设置请求地址所对应的视图名称
    SpringMVC中设置任何一个view-controller时，其他控制器中的请求映射将全部失效
    需要在SpringMVC的核心配置文件中设置 开启mvc注解驱动的标签
    -->
    <mvc:view-controller path="/" view-name="index"/>
    <mvc:view-controller path="/toAddEmployee" view-name="employeeAdd"/>
    <mvc:view-controller path="/file" view-name="file"/>

    <!--开放对静态资源的访问 一定配置在mvc注解驱动的标签之前-->
    <mvc:default-servlet-handler/>

    <!--开启mvc注解驱动的标签-->
    <mvc:annotation-driven/>

    <!--解决json乱码配置 mvc注解驱动的标签-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                        <property name="failOnEmptyBeans" value="false"/>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--配置拦截器-->
    <mvc:interceptors>

        <!--对DispatcherServlet所处理的所有的请求进行拦截-->
        <!--<bean class="interceptors.FirstInterceptor"></bean>-->
        <!--<ref bean="firstInterceptor"></ref>-->

        <!--设置需要拦截的路径-->
        <mvc:interceptor>
            <!--拦截-->
            <mvc:mapping path="/**"/>
            <!--排除-->
            <mvc:exclude-mapping path="/"/>
            <!--拦截规则-->
            <ref bean="firstInterceptor"></ref>
        </mvc:interceptor>

        <!--设置需要拦截的路径-->
        <mvc:interceptor>
            <!--拦截-->
            <mvc:mapping path="/**"/>
            <!--排除-->
            <mvc:exclude-mapping path="/"/>
            <!--拦截规则-->
            <ref bean="secondInterceptor"></ref>
        </mvc:interceptor>

    </mvc:interceptors>

    <!--配置异常处器-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!--
                properties的键表示处理器方法执行过程中出现的异常
                properties的值表示若出现指定异常时，设置一个新的视图名称，跳转到指定页面
                -->
                <prop key="java.lang.ArithmeticException">error</prop>
            </props>
        </property>
        <!--exceptionAttribute属性设置一个属性名，将出现的异常信息在请求域中进行共享-->
        <property name="exceptionAttribute" value="exception"></property>
    </bean>

</beans>